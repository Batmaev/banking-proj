@startuml classes_uml

class Client {
    + bank: Bank
    + name: str
    + surname: str
    + passport: str?
    + address: str?
    + accounts: Dict[uuid, Account]

    + create_account(): Account
    + check_privileges(amount): bool
}

interface Account {
    + id: uuid
    + client: Client
    + balance: int

    + add(amonut): None
    + subtract(amount): None
}

Account <-- Client

Account <|-- DebitAccount
Account <|-- DepositAccount
Account <|-- CreditAccount
Account <|-- CashAccount


class Bank {
    + accounts: Dict[uuid, Account]
    + transaction_list: TransactionList
    + unathorized_withdrawal_limit: int
}

Client <-- Bank

class Transaction {
    + From: Account
    + To: Account
    + amount: int
    + date: datetime

    + perform(): Transaction
}

Transaction <-- "2" Account

class TransactionList {
    + transactions: Set[Transaction]
    + append(transaction): None
}

TransactionList *-- Transaction

@enduml